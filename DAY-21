Binary Tree Paths
Merge Two Binary Trees

class Solution {
public:
    vector<string> paths;
    void dfs_preorder(TreeNode *root,string path)
    {
        if(root==NULL) return;
        if(!path.empty())
        {
            path+="->";
        }
        path+=to_string(root->val);
        if(root->left || root->right)
        {
            dfs_preorder(root->left,path);
            dfs_preorder(root->right,path);
        }
        else
        {
            paths.push_back(path);
        }
    }
    vector<string> binaryTreePaths(TreeNode* root) 
    {
        string path;
        dfs_preorder(root,path);
        return paths;
    }
};
...........................................................
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2)
    {
        if(root1==NULL)
        {
            return root2;
        }
        if(root2== NULL)
        {
            return root1;
        }
        root1->val+=root2->val;
        root1->left=mergeTrees(root1->left,root2->left);
        root1->right=mergeTrees(root1->right,root2->right);
        return root1;
    }
};

