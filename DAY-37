1. Minimum Number of Steps to Make Two Strings Anagram
2. Partition Labels


 int minSteps(string s, string t)
    {
        int n=s.size();
        int prefix1[255]={0};
        int prefix2[255]={0};
        int prefix3[255]={0};
        for(int i=0;i<s.size();i++)
        {
            prefix1[s[i]-'a']++;
        }
        
        for(int i=0;i<t.size();i++)
        {
            prefix2[t[i]-'a']++;
        }
        
        for(int i=0;i<255;i++)
        {
            prefix3[i]=prefix1[i]-prefix2[i];
        }
        int c=0;
        for(int i = 0;i < 255;i++)
        {
            if(prefix3[i] > 0)
            {
                c+=prefix3[i];
            }
        }
       return c; 
    }
    
 ...................................................................................................
 
 class Solution {
public:
    vector<int> partitionLabels(string s) 
    {
        vector<int> a(26,0);
        vector<int> ans;
        for(int i=0;i<s.length();i++)
        {
            a[s[i]-'a'] = i;
        }
        
        int j=0, anchor=0;
        for(int i=0;i<s.length();i++)
        {
            j = max(j,a[s[i]-'a']);
            if(i == j)
            {
                ans.push_back(j-anchor+1);
                anchor = i+1;
            }
        }
        
        return ans;
    }
};
