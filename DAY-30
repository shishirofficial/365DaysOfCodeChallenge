Univalued Binary Tree
Sum of Root to Leaf Binary Numbers

class Solution {
public:
    set<int> res;
    void dfs(TreeNode *root)
    {
        if(!root)
        {
            return;
        }
        res.insert(root->val);
        dfs(root->left);
        dfs(root->right);
    }
    bool isUnivalTree(TreeNode* root)
    {
        dfs(root);
        if(res.size()==1)
        {
            return true;
        }
        return false;
    }
};

...........................................................................

class Solution {
public:
    int rootToLeaf=0;
    
    void preorder(TreeNode *root,int currNumber)
    {
        if(root != NULL)
        {
        
        currNumber = (currNumber << 1) | root->val;
        if(root->left ==NULL && root->right == NULL)
        {
            rootToLeaf+=currNumber;
        }
        preorder(root->left,currNumber);
        preorder(root->right,currNumber);
        }
    }
    int sumRootToLeaf(TreeNode* root) 
    {
        preorder(root,0);
        return rootToLeaf;
    }
};
