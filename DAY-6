1. Minimum Remove to Make Valid Parentheses
2. Group Anagrams

class Solution {
public:
    string minRemoveToMakeValid(string s)
    {
        stack<int> st;
        for(int i=0;i<s.length();i++)
        {
            if(s[i]=='(')
            {
                st.push(i);
            }
            else if(s[i]==')')
            {
                if(st.empty())
                {
                    s[i]='#';
                }
                else
                {
                    st.pop();
                }
            }
        }
        
        while(!st.empty())
        {
            s[st.top()]='#';
            st.pop();
                
        }
        string ans="";
        for(int i=0;i<s.length();i++)
        {
            if(s[i]!='#')
            {
                ans.push_back(s[i]);
            }
        }
       return ans; 
    }
};

........................................................

class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs)
    {
        vector<vector<string>> ans;
        unordered_map<string,vector<string>> mp;

        for(auto str: strs)
        {
            string temp=str;
            sort(temp.begin(),temp.end());
            mp[temp].push_back(str);
        }
        for(auto x:mp)
        {
            ans.push_back(x.second);
        }
         return ans;
    }
};
